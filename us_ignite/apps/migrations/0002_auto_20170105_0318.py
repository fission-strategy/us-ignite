# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-01-05 03:18
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import geoposition.fields
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
        ('apps', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords_string', models.CharField(blank=True, editable=False, max_length=500)),
                ('title', models.CharField(max_length=500, verbose_name='Title')),
                ('_meta_title', models.CharField(blank=True, help_text='Optional title to be used in the HTML title tag. If left blank, the main title field will be used.', max_length=500, null=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('gen_description', models.BooleanField(default=True, help_text='If checked, the description will be automatically generated from content. Uncheck if you want to manually set a custom description.', verbose_name='Generate description')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=255, verbose_name='Application Name')),
                ('stage', models.IntegerField(choices=[(1, 'Idea Complete'), (2, 'Prototype Complete'), (3, 'In Development'), (4, 'Deployed'), (5, 'Commercialized')], default=1, help_text='Please select the option that best reflects your current progress.', verbose_name='Status')),
                ('website', models.URLField(blank=True, help_text='Please enter a URL starting with http or https', max_length=500, null=True)),
                ('image', models.ImageField(blank=True, help_text='E.g. logo, screenshot, application diagram, photo of demo. Image suggested ratio: 3:2', upload_to='apps')),
                ('summary', models.TextField(blank=True, help_text='One sentence (tweet-length) pitch/summary of the application')),
                ('impact_statement', models.TextField(blank=True, help_text='Who benefits and how in one paragraph or less')),
                ('assistance', models.TextField(blank=True, help_text='Are you looking for additional help for this project? (e.g. specific technical skills, subject matter experts, design help, partners for pilots, etc)')),
                ('team_name', models.CharField(blank=True, help_text='Organization/Company name of developers', max_length=255)),
                ('team_description', models.TextField(blank=True)),
                ('acknowledgments', models.TextField(blank=True, help_text='Is their anyone you want to acknowledge for supporting this application?')),
                ('notes', models.TextField(blank=True)),
                ('slug', models.URLField(unique=True)),
                ('status', models.IntegerField(choices=[(1, 'Published'), (2, 'Draft'), (3, 'Removed')], default=2)),
                ('is_featured', models.BooleanField(default=False)),
                ('features_other', models.CharField(blank=True, max_length=255)),
                ('awards', models.TextField(blank=True, help_text='Recognition or Awards')),
                ('position', geoposition.fields.GeopositionField(blank=True, max_length=42)),
                ('is_homepage', models.BooleanField(default=False, help_text='If marked this element will be shown in the homepage.', verbose_name='Show in the homepage?')),
            ],
            options={
                'ordering': ('-is_featured', '-created'),
            },
        ),
        migrations.CreateModel(
            name='ApplicationMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('image', models.ImageField(blank=True, help_text=b'Image suggested ratio: 3:2', max_length=500, upload_to='apps')),
                ('url', models.URLField(blank=True, help_text='Please enter a URL starting with http or https', verbose_name='URL')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.Application')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='ApplicationMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_edit', models.BooleanField(default=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.Application')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('url', models.URLField(help_text='Please enter a URL starting with http or https', max_length=500, verbose_name='URL')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.Application')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords_string', models.CharField(blank=True, editable=False, max_length=500)),
                ('title', models.CharField(max_length=500, verbose_name='Title')),
                ('_meta_title', models.CharField(blank=True, help_text='Optional title to be used in the HTML title tag. If left blank, the main title field will be used.', max_length=500, null=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('gen_description', models.BooleanField(default=True, help_text='If checked, the description will be automatically generated from content. Uncheck if you want to manually set a custom description.', verbose_name='Generate description')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=255, verbose_name='Application Name')),
                ('stage', models.IntegerField(choices=[(1, 'Idea Complete'), (2, 'Prototype Complete'), (3, 'In Development'), (4, 'Deployed'), (5, 'Commercialized')], default=1, help_text='Please select the option that best reflects your current progress.', verbose_name='Status')),
                ('website', models.URLField(blank=True, help_text='Please enter a URL starting with http or https', max_length=500, null=True)),
                ('image', models.ImageField(blank=True, help_text='E.g. logo, screenshot, application diagram, photo of demo. Image suggested ratio: 3:2', upload_to='apps')),
                ('summary', models.TextField(blank=True, help_text='One sentence (tweet-length) pitch/summary of the application')),
                ('impact_statement', models.TextField(blank=True, help_text='Who benefits and how in one paragraph or less')),
                ('assistance', models.TextField(blank=True, help_text='Are you looking for additional help for this project? (e.g. specific technical skills, subject matter experts, design help, partners for pilots, etc)')),
                ('team_name', models.CharField(blank=True, help_text='Organization/Company name of developers', max_length=255)),
                ('team_description', models.TextField(blank=True)),
                ('acknowledgments', models.TextField(blank=True, help_text='Is their anyone you want to acknowledge for supporting this application?')),
                ('notes', models.TextField(blank=True)),
                ('slug', models.URLField(unique=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.Application')),
                ('site', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('status', models.IntegerField(choices=[(3, 'Featured'), (1, 'Published'), (2, 'Draft')], default=2)),
                ('description', models.TextField(blank=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.Application')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.Page')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.RemoveField(
            model_name='applicationbase',
            name='site',
        ),
        migrations.DeleteModel(
            name='ApplicationBase',
        ),
        migrations.AddField(
            model_name='application',
            name='domain',
            field=models.ForeignKey(blank=True, help_text='What is the primary public benefit priority area served by this application?', null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.Domain'),
        ),
        migrations.AddField(
            model_name='application',
            name='features',
            field=models.ManyToManyField(blank=True, help_text='Check all that apply', to='apps.Feature'),
        ),
        migrations.AddField(
            model_name='application',
            name='members',
            field=models.ManyToManyField(related_name='membership_set', through='apps.ApplicationMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='application',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ownership_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='application',
            name='site',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='application',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AlterUniqueTogether(
            name='applicationmembership',
            unique_together=set([('user', 'application')]),
        ),
    ]
